// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Queries.Persistence;

namespace CompanyMasterDataDemo.Migrations
{
    [DbContext(typeof(CMDContext))]
    [Migration("20190710091033_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerName");

                    b.Property<int>("CustomerNumber");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DomainLayer.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Height");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ItemName");

                    b.Property<int>("ItemNumber");

                    b.Property<decimal>("Price");

                    b.Property<string>("Unit");

                    b.Property<decimal>("WeightInGrams");

                    b.Property<decimal>("Width");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DomainLayer.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.Property<string>("CustomerName");

                    b.Property<int>("CustomerNumber");

                    b.Property<DateTime>("EstimatedDeliveryTime");

                    b.Property<bool>("IncludeFreeBasket");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDelivered");

                    b.Property<string>("ShippingAddress");

                    b.Property<decimal>("TotalItems");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DomainLayer.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("ItemAddedToOrderTime");

                    b.Property<decimal>("ItemHeight");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("ItemPrice");

                    b.Property<string>("ItemUnit");

                    b.Property<decimal>("ItemWeightInGrams");

                    b.Property<decimal>("ItemWidth");

                    b.Property<Guid>("OrderId");

                    b.Property<decimal>("Quantity");

                    b.HasKey("OrderItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DomainLayer.Models.Order", b =>
                {
                    b.HasOne("DomainLayer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DomainLayer.Models.OrderItem", b =>
                {
                    b.HasOne("DomainLayer.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DomainLayer.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
